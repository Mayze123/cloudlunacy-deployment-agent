version: "3.8"

services:
  cloudlunacy-agent:
    container_name: cloudlunacy-agent-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=development
      - PORT=3005
      - HEALTH_PORT=9000
      - BACKEND_URL=http://host.docker.internal:8080
      - FRONT_API_URL=http://host.docker.internal:3005
      - MONGO_USE_TLS=true
    ports:
      - "3006:3005"
      - "9000:9000"
    env_file:
      - ".env.dev"
    volumes:
      - ./:/app
      - ./dev-cloudlunacy:/opt/cloudlunacy
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      mongodb:
        condition: service_started
        required: false
    networks:
      - cloudlunacy-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3005/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # MongoDB service can be enabled by adding 'mongodb' to DATABASES_ENABLED
  mongodb:
    container_name: mongodb-agent-dev
    image: mongo:latest
    command: --tlsMode preferTLS --tlsCertificateKeyFile /etc/mongodb/certs/server.pem --tlsCAFile /etc/mongodb/certs/ca.crt --tlsAllowConnectionsWithoutCertificates
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpassword
    volumes:
      - mongodb_data:/data/db
      - ./dev-cloudlunacy/certs:/etc/mongodb/certs:ro
    networks:
      - cloudlunacy-network
    restart: unless-stopped
    profiles:
      - mongodb
      - default

networks:
  cloudlunacy-network:
    driver: bridge

volumes:
  mongodb_data:
