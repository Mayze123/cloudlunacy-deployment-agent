// templates/Dockerfile.node.hbs
FROM node:{{nodeVersion}}-alpine

WORKDIR /app

# Install dependencies first (better layer caching)
COPY package*.json ./

{{#if useYarn}}
RUN yarn install
{{else if usePnpm}}
RUN npm install -g pnpm && pnpm install
{{else}}
RUN npm install
{{/if}}

# Copy application code
COPY . .

{{#if buildCommand}}
RUN {{{buildCommand}}}
{{/if}}

EXPOSE {{port}}

{{#if startCommand}}
CMD {{{startCommand}}}
{{else}}
CMD ["npm", "start"]
{{/if}}

// templates/docker-compose.node.hbs
version: '3.8'

services:
  {{appName}}:
    container_name: {{appName}}-{{environment}}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "{{port}}:{{port}}"
    environment:
      - NODE_ENV={{environment}}
{{#if envVars}}
{{#each envVars}}
      - {{@key}}={{{this}}}
{{/each}}
{{/if}}
    restart: unless-stopped
{{#if volumes}}
    volumes:
{{#each volumes}}
      - {{this}}
{{/each}}
{{/if}}
{{#if dependencies}}
    depends_on:
{{#each dependencies}}
      - {{this}}
{{/each}}
{{/if}}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:{{port}}{{healthCheckEndpoint}}"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s