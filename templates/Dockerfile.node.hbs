# Use official Node.js 18 Alpine image as the base
FROM node:18-alpine

# Install necessary packages
RUN apk add --no-cache wget curl bash nano

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install production dependencies
RUN npm ci --only=production

# Copy the rest of the application code
COPY . .

# Create a health check server
RUN printf '%s\n' \
  'const http = require("http");' \
  '' \
  'const server = http.createServer((req, res) => {' \
  '  if (req.url === "/health") {' \
  '    res.writeHead(200, {"Content-Type": "application/json"});' \
  '    res.end(JSON.stringify({ status: "OK" }));' \
  '  } else {' \
  '    res.writeHead(404);' \
  '    res.end();' \
  '  }' \
  '});' \
  '' \
  'const port = process.env.HEALTH_PORT || 9000;' \
  'server.listen(port, () => {' \
  '  console.log(`Health check server listening on port ${port}`);' \
  '});' \
  '' \
  '// Keep the process running' \
  'process.stdin.resume();' > health-server.js

# Create a start script
RUN printf '%s\n' \
  '#!/bin/sh' \
  '' \
  '# Start health check server in background' \
  'node health-server.js &' \
  'HEALTH_PID=$!' \
  '' \
  '# Start the main application' \
  'npm start &' \
  'MAIN_PID=$!' \
  '' \
  '# Error handling function' \
  'cleanup() {' \
  '    echo "Stopping processes..."' \
  '    kill $HEALTH_PID $MAIN_PID 2>/dev/null' \
  '    exit' \
  '}' \
  '' \
  '# Set up signal handling' \
  'trap cleanup INT TERM' \
  '' \
  '# Wait for either process to exit' \
  'wait -n' \
  '' \
  '# If we get here, one of the processes died' \
  'echo "A process exited unexpectedly"' \
  'cleanup' > start.sh

# Make the start script executable
RUN chmod +x start.sh

# Create a non-root user for security
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Change ownership of the application directory
RUN chown -R appuser:appgroup /app

# Switch to the non-root user
USER appuser

# Expose application and health check ports (optional, since Traefik handles routing)
# EXPOSE 8080
# EXPOSE 9000

# Start the application using the start script
CMD ["./start.sh"]